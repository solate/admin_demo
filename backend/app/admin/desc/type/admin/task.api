syntax = "v1"

import (
    "../base.api"
)

info (
	title   : "定时任务服务接口"
	desc    : "定时任务计划和执行管理相关接口定义"
	author  : "solate"
	version : "v1.0"
)

type (
    // 创建计划请求
    CreatePlanReq {
        Name          string `json:"name"`                    // 计划名称
        Description   string `json:"description,optional"`    // 计划描述
        Group         string `json:"group,optional"`         // 任务分组
        CronSpec      string `json:"cron_spec"`             // cron表达式
        Status        int    `json:"status"`                // 状态: 1:启用, 2:禁用
        PlanType      string `json:"plan_type,optional"`             // 计划类型: routine/special
        Priority      int    `json:"priority,optional"`      // 任务优先级
        Timeout       int    `json:"timeout,optional"`       // 任务超时时间(秒)
        RetryTimes    int    `json:"retry_times,optional"`   // 重试次数
        RetryInterval int    `json:"retry_interval,optional"` // 重试间隔(秒)
        StartTime     int64  `json:"start_time,optional"`    // 生效开始时间
        EndTime       int64  `json:"end_time,optional"`      // 生效结束时间
        Command       string `json:"command"`                // 要执行的命令或方法
        Params        string `json:"params,optional"`        // 执行参数，支持JSON格式
    }

    // 创建计划响应
    CreatePlanResp {
        PlanID string `json:"plan_id"` // 计划ID
    }

    // 更新计划请求
    UpdatePlanReq {
        PlanID        string `path:"plan_id"`
        Name          string `json:"name,optional"`          // 计划名称
        Description   string `json:"description,optional"`   // 计划描述
        Group         string `json:"group,optional"`        // 任务分组
        CronSpec      string `json:"cron_spec,optional"`    // cron表达式
        Status        int    `json:"status,optional"`       // 状态
        Priority      int    `json:"priority,optional"`     // 任务优先级
        Timeout       int    `json:"timeout,optional"`      // 任务超时时间(秒)
        RetryTimes    int    `json:"retry_times,optional"`  // 重试次数
        RetryInterval int    `json:"retry_interval,optional"` // 重试间隔(秒)
        StartTime     int64  `json:"start_time,optional"`   // 生效开始时间
        EndTime       int64  `json:"end_time,optional"`     // 生效结束时间
        Command       string `json:"command,optional"`       // 要执行的命令或方法
        Params        string `json:"params,optional"`        // 执行参数，支持JSON格式
    }

    // 删除计划请求
    DeletePlanReq {
        PlanID string `path:"plan_id"`
    }

    // 获取计划请求
    GetPlanReq {
        PlanID string `path:"plan_id"`
    }

    // 计划列表请求
    PlanListReq {
        PageRequest
        Name     string `form:"name,optional"`      // 计划名称
        Group    string `form:"group,optional"`     // 任务分组
        Status   int    `form:"status,optional"`    // 状态
        PlanType string `form:"plan_type,optional"` // 计划类型
    }

    // 计划信息
    PlanInfo {
        PlanID        string `json:"plan_id"`         // 计划ID
        Name          string `json:"name"`            // 计划名称
        Description   string `json:"description"`     // 计划描述
        Group         string `json:"group"`          // 任务分组
        CronSpec      string `json:"cron_spec"`      // cron表达式
        Status        int    `json:"status"`         // 状态
        PlanType      string `json:"plan_type"`      // 计划类型
        Priority      int    `json:"priority"`       // 任务优先级
        Timeout       int    `json:"timeout"`        // 任务超时时间(秒)
        RetryTimes    int    `json:"retry_times"`    // 重试次数
        RetryInterval int    `json:"retry_interval"` // 重试间隔(秒)
        StartTime     int64  `json:"start_time"`     // 生效开始时间
        EndTime       int64  `json:"end_time"`       // 生效结束时间
        Command       string `json:"command"`         // 要执行的命令或方法
        Params        string `json:"params"`          // 执行参数，支持JSON格式
        CreatedAt     int64  `json:"created_at"`     // 创建时间
    }

    // 计划列表响应
    PlanListResp {
        Page *PageResponse `json:"page"` // 分页信息
        List []*PlanInfo   `json:"list"` // 计划列表
    }

    // 任务列表请求
    TaskListReq {
        PageRequest
        PlanID    string `form:"plan_id,optional"`    // 计划ID
        Name      string `form:"name,optional"`       // 任务名称
        Group     string `form:"group,optional"`      // 任务分组
        Status    string `form:"status,optional"`     // 任务状态
        StartTime int64  `form:"start_time,optional"` // 开始时间
        EndTime   int64  `form:"end_time,optional"`   // 结束时间
    }

    // 任务信息
    TaskInfo {
        TaskID        string `json:"task_id"`         // 任务ID
        Name          string `json:"name"`            // 任务名称
        PlanID        string `json:"plan_id"`         // 计划ID
        PlanType      string `json:"plan_type"`       // 计划类型
        Group         string `json:"group"`           // 任务分组
        Priority      int    `json:"priority"`        // 任务优先级
        Status        string `json:"status"`          // 任务状态
        PlannedTime   int64  `json:"planned_time"`    // 计划执行时间
        StartTime     int64  `json:"start_time"`      // 实际开始时间
        EndTime       int64  `json:"end_time"`        // 实际结束时间
        Duration      int    `json:"duration"`        // 执行时长(ms)
        Result        string `json:"result"`          // 执行结果
        Error         string `json:"error"`           // 错误信息
        RetryCount    int    `json:"retry_count"`     // 已重试次数
        NextRetryTime int64  `json:"next_retry_time"` // 下次重试时间
        CreatedAt     int64  `json:"created_at"`      // 创建时间
    }

    // 任务列表响应
    TaskListResp {
        Page *PageResponse `json:"page"` // 分页信息
        List []*TaskInfo   `json:"list"` // 任务列表
    }

    // 手动触发任务请求
    TriggerTaskReq {
        PlanID string `json:"plan_id"` // 计划ID
    }

    // 手动触发任务响应
    TriggerTaskResp {
        TaskID string `json:"task_id"` // 任务ID
    }

    // 停止任务请求
    StopTaskReq {
        TaskID string `path:"task_id"` // 任务ID
    }
    // 删除任务请求
    DeleteTaskReq {
        TaskID string `path:"task_id"` // 任务ID
    }
)

@server (
    prefix: /api/admin/v1
    group: task
    middleware: AuthMiddleware
)
service admin {
    @doc "创建计划"
    @handler CreatePlan
    post /plans (CreatePlanReq) returns (CreatePlanResp)

    @doc "更新计划"
    @handler UpdatePlan
    put /plans/:plan_id (UpdatePlanReq) returns (bool)

    @doc "删除计划"
    @handler DeletePlan
    delete /plans/:plan_id (DeletePlanReq) returns (bool)

    @doc "获取计划详情"
    @handler GetPlan
    get /plans/:plan_id (GetPlanReq) returns (PlanInfo)

    @doc "获取计划列表"
    @handler ListPlan
    get /plans (PlanListReq) returns (PlanListResp)

    @doc "获取任务列表"
    @handler ListTask
    get /tasks (TaskListReq) returns (TaskListResp)

    @doc "手动触发任务"
    @handler TriggerTask
    post /tasks/trigger (TriggerTaskReq) returns (TriggerTaskResp)

    @doc "停止任务"
    @handler StopTask
    post /tasks/:task_id/stop (StopTaskReq) returns (bool)
    
    @doc "删除任务"
    @handler DeleteTask
    delete /tasks/:task_id (DeleteTaskReq) returns (bool)
}